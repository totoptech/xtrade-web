const id = "reference/state_machine.md";
						const collection = "docs";
						const slug = "reference/state_machine";
						const body = "\nTradeX-chart implements a [State Machine](https://www.itemis.com/en/products/itemis-create/documentation/user-guide/overview_what_are_state_machines?hsLang=de) for management of some of it's internal states.\n\nA good deal of inspiration from the excellent [XState project](https://xstate.js.org/) for it's internal finite state machine.\n\nWhy reinvent the wheel? While XState does offer a cut down version of it's library, the aim of TradeX-chart is to have as few external dependencies as possible. Writing a custom state machine also allows for the selective implementation of required features, thus keeping the overhead down.\n\n## Accessing the State Machine\n\nYou too can leverage the power of a State Machine via the ``class StateMachine`` exported by the chart.\n\n```javascript\nimport {StateMachine} from \"tradex-chart\"\n```\n\n## Using the State Machine\n\n```javascript\nlet stateMachine = new StateMachine(config, context)\n```\n\n@param {Object} config - state machine definition  \n@param {Object} context - reference to instance that the state machine operates on\n\nThe definition context **must** provide a reference, ``context.core`` to the chart instance, as the chart provides the emitter and listener functionality for the events that trigger state transition.\n\n```javascript\ncontext.core = chart\n```\n\n## State Machine Definition (config)\n\nThe state machine definition is an object that requires the minimum properties:\n\n* id {string} - identifier\n* initial {string} - initial state\n* context {Object} - reference to instance that the state machine operates on\n* states {Object} - states (functions), that will only execute and progress to the next when condition is met.\n\n### Optional State Machine Definition Properties\n\n* guards {Object} - logical test functions\n* actions {Object} - functions\n\n## Example Definition\n\n```javascript\nconst definiton = {\n  id: \"main\",\n  initial: \"idle\",\n  context: {},\n  states: {\n\n  }\n}\n```\n:::note\n[The States used by the chart](https://github.com/tradex-app/TradeX-chart/tree/master/src/state) can be for practical reference.\n:::\n\n## Further Reading on State Machines\n\n[https://www.itemis.com/en/yakindu/state-machine/documentation/user-guide/quick_ref](https://www.itemis.com/en/yakindu/state-machine/documentation/user-guide/quick_ref)";
						const data = {title:"State Machine",editUrl:true,head:[],template:"doc"};
						const _internal = {
							type: 'content',
							filePath: "/mnt/ext4/Home/neoarttec/Archives/Linux/Crypto/Trading/Mercury/MercuryTrader/component-module-tests/TradeX/tradex-chart/src/docs/src/content/docs/reference/state_machine.md",
							rawData: "\ntitle: State Machine",
						};

export { _internal, body, collection, data, id, slug };
