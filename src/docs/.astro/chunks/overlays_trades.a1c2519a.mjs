const id = "reference/overlays_trades.md";
						const collection = "docs";
						const slug = "reference/overlays_trades";
						const body = "\nTrade makers representing buy or sell orders, are placed on the primary chart pane, above the individual price history intervals (candles) they are associated with via their timestamp.\n\n![Trade Markers](../../../assets/trade-markers.png)\n\nTradeX Chart provides a number of marker icon options, their size and colour are configurable. [Trades Settings](#trades-settings) has more details.\n\n## Toggling Trade Markers\n\n\n\n## Trade Order Data Entries\n\nAn individual trade entry has the following format:\n\n```javascript\nconst trade = {\n  timestamp: 1558605600000, // number - time stamp\n  id: \"012336352\",          // string - trade id\n  side: \"buy\",              // string - buy or sell\n  price: 7590,              // number\n  amount: 0.25,             // number\n  filled: 0.25,             // number\n  average: 7845,            // number\n  total: 1961,              // number\n  tag: \"Bot ABC - BTC/USDT\" // string - user defined identifier\n}\n```\n\n## Add Trade\n\nA single trade can be added to the chart data state via the following:\n\n```javascript\nchart.addTrade(trade)\n```\n\nWhere the [trade entry object format](#trade-entry) is defined in the previous section. ``addTrade()`` will validate the trade entry and return a boolean as the result.\n\n## Remove Trade\n\nNot implemented yet.\n\n## Trade State Data\n\nThe [chart State Data](../state) provides a collection of all of the trades that can be displayed on the chart.\n\nThe trades are represented by an object in the ``primary`` chart pane of the data state.\n\nThe trades object requires the following to be valid:\n\n\n| Property | Type   | Description                                |\n| ---------- | -------- | -------------------------------------------- |\n| name     | string | \"Trades\"                                   |\n| type     | string | \"trades\"                                   |\n| settings | object | [define how trades are displayed](#trades-settings) |\n| data     | array  | [trade entries](#trade-data-trade-entries) |\n\n### Trades Settings\n\nThe default trade settings are as follows\n\n```javascript\n{\n  // icons must be in SVG format\n  iconBuy: tradeIcons.arrowUp,\n  iconSell: tradeIcons.arrowDown,\n  iconHeight: 30,\n  iconWidth: 30,\n  iconMinDim: 10,\n  buyColour: \"#0f0\",\n  sellColour: \"#f00\",\n  offset: 10\n}\n```\nIcons are expected to be in SVG format.\n\n### Trades Data - Trade Entries\n\n[Trade entries (objects)](#trade-entry) are grouped by timestamp in an array as it may be possible that multiple trades may be executed on the same time interval (candle).\n\n```javascript\nconst config = {\nohlcv: [],\nprimary: [\n  {\n    \"name\": \"Trades\",\n    \"type\": \"trades\",\n    \"settings\": {\n      // see above example for all options\n    },\n    data: {\n      1695906000000: [\n          {\n            timestamp: 1695906000000,\n            id: \"012336352\",\n            side: \"buy\",\n            price: 27032,\n            amount: 0.25,\n            filled: 0.25,\n            average: 27032,\n            total: 27032,\n            tag: \"Bot ABC - BTC/USDT\"\n          }\n        ],\n        1695945600000: [\n          {\n            timestamp: 1695945600000,\n            id: \"012335353\",\n            side: \"sell\",\n            price: 27032,\n            amount: 0.25,\n            filled: 0.25,\n            average: 27032,\n            total: 27032,\n            tag: \"Bot ABC - BTC/USDT\"\n          }\n        ],\n        1696327200000: [\n          {\n            timestamp: 1696327200000,\n            id: \"012335354\",\n            side: \"sell\",\n            price: 27550.6,\n            amount: 0.25,\n            filled: 0.25,\n            average: 27550.6,\n            total: 27550.6,\n            tag: \"Bot ABC - BTC/USDT\"\n          }\n        ]\n      }\n  }\n],\nsecondary: [],\n}\n```\n\n## Trade Marker Event\n\nBy default, if a trade marker is clicked, it will invoke the trades overlay method which will display the trade data over the chart.\n\nThis can be disabled via the [chart config](../../02_configuration).\n\n```javascript\nconst config = {\n  trades: { \n    display: true,\n    displayInfo: false \n  }\n}\n```\n\nThe chart emits a ``trade_selected`` [event](../../events) which you can subscribe to and invoke your own method.\n\nThe event will pass the information for that [trade entry](#trade-entry) to the subscribed event listener.\n";
						const data = {title:"Overlay Trades",description:"Trade data and markers",editUrl:true,head:[],template:"doc"};
						const _internal = {
							type: 'content',
							filePath: "/mnt/ext4/Home/neoarttec/Archives/Linux/Crypto/Trading/Mercury/MercuryTrader/component-module-tests/TradeX/tradex-chart/src/docs/src/content/docs/reference/overlays_trades.md",
							rawData: "\ntitle: Overlay Trades\ndescription: Trade data and markers",
						};

export { _internal, body, collection, data, id, slug };
