const id = "reference/themes.md";
						const collection = "docs";
						const slug = "reference/themes";
						const body = "\n\nChart themes can be set either via the initial config that the chart is instantiated with or afterwards via the API.\n\nFor a full list of theme options refer to the [config](configuration.md) documentation.\n\n## Loading a New Theme\n\nTODO: text goes here...\n\n## Modifying Individual Properties\n\nThe API offers granular control over the theme property values.\n\nNested theme properties are referenced via the path parameter as a string, using the same notation Javascript uses for objects.\n\n### setProperty(path, value)\n\nSets theme property value and refresh the chart to actualize the change. Method returns the previous value. If the path (property) does not exist, it will return ``undefined``.\n\n**Parameters**\n\n* @param {string} path - \"candle\" or \"candle.Type\"\n* @param {*} value\n* @returns {*} - previous value\n\n**Examples**\n\nSetting on specific value\n```javascript\nchart0.theme.setProperty(\"candle.Type\", \"candle_up_hollow\")\n```\n\nsetting multiple values via the parent property.\n```javascript\nconst candleTheme = {\n      Type: \"candle_down_hollow\",\n      UpBodyColour: \"#FAEB2488\",\n      UpWickColour: \"#FAEB24\",\n      DnBodyColour: \"#F900FE88\",\n      DnWickColour: \"#F900FE\",\n    }\nchart0.theme.setProperty(\"candle\", candleTheme)\n```\n\n:::note\nDo not directly modify the theme values. the ``setProperty()`` must be used.\n:::\n\n### getProperty(path)\n\n``getProperty(path)`` behaves similarly to ``setProperty()`` in that the parameter accepts a string in object dot notation. Method returns the previous value. If the path (property) does not exist, it will return ``undefined``.\n\n**Parameters**\n\n* @param {string} path - \"candle\" or \"candle.Type\"\n* @returns {*}\n\n**Examples**\n```javascript\nchart0.theme.getProperty(\"candle.Type\")\n```\n\n## Theme Properties\n\n\n\n### Candle Types\n\n```javascript\nexport const CandleType = {\n  CANDLE_SOLID: 'candle_solid',\n  CANDLE_HOLLOW: 'candle_hollow',\n  CANDLE_UP_HOLLOW: 'candle_up_hollow',\n  CANDLE_DOWN_HOLLOW: 'candle_down_hollow',\n  OHLC: 'ohlc',\n  AREA: 'area',\n  LINE: 'line'\n}\n```\n\n#### CANDLE_SOLID\n![CANDLE_SOLID](../../../assets/CANDLE_SOLID.png)\n#### CANDLE_HOLLOW\n![CANDLE_HOLLOW](../../../assets/CANDLE_HOLLOW.png)\n#### CANDLE_UP_HOLLOW\n![CANDLE_UP_HOLLOW](../../../assets/CANDLE_UP_HOLLOW.png)\n#### CANDLE_DOWN_HOLLOW\n![CANDLE_DOWN_HOLLOW](../../../assets/CANDLE_DOWN_HOLLOW.png)\n#### OHLC\n![OHLC](../../../assets/CANDLE_OHLC.png)\n#### AREA\n![AREA](../../../assets/CANDLE_AREA.png)\n#### LINE\n![LINE](../../../assets/CANDLE_LINE.png)\n\n\n";
						const data = {title:"Themes",description:"How to customize the look of TradeX.",editUrl:true,head:[],template:"doc"};
						const _internal = {
							type: 'content',
							filePath: "/mnt/ext4/Home/neoarttec/Archives/Linux/Crypto/Trading/Mercury/MercuryTrader/component-module-tests/TradeX/tradex-chart/src/docs/src/content/docs/reference/themes.md",
							rawData: "\ntitle: Themes\ndescription: How to customize the look of TradeX.",
						};

export { _internal, body, collection, data, id, slug };
