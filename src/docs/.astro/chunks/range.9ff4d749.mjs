import { i as createVNode, F as Fragment, s as spreadAttributes } from './astro.8a1fcc00.mjs';
import '@astrojs/internal-helpers/path';
import 'node:fs';
import 'node:path';
import 'node:url';
import 'slash';
import 'node:fs/promises';
import './pages/404.astro.3b1f3a71.mjs';
import 'html-escaper';
import 'fs';
import 'path';
/* empty css                        */import 'zod';
/* empty css                                                             */import 'execa';

const images = {
					
				};

				function updateImageReferences(html) {
					return html.replaceAll(
						/__ASTRO_IMAGE_="(.+)"/gm,
						(full, imagePath) => spreadAttributes({src: images[imagePath].src, ...images[imagePath].attributes})
					);
				}

				const html = updateImageReferences("<p>The chart range determines what subset of price data is displayed to the user via a start and end bound.</p>\n<h2 id=\"initial-range-config\">Initial Range Config</h2>\n<p>On <code>chart.start(config)</code> the chart will look for a starting timestamp in the provided config. If none is found, it will default to displaying the latest price records (candles).</p>\n<pre is:raw=\"\" class=\"astro-code min-dark\" style=\"background-color: #1f1f1f; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F97583\">const</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">config</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> {</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">  range</span><span style=\"color: #F97583\">:</span><span style=\"color: #B392F0\"> {</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    </span><span style=\"color: #6B737C\">// range starting timestamp, chart will display data from here</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    </span><span style=\"color: #6B737C\">// if undefined, the range will position by default at the end of the price history ie. the most recent price records (candles)</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    startTS</span><span style=\"color: #F97583\">:</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F8F8F8\">1543572000000</span><span style=\"color: #BBBBBB\">,</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    </span><span style=\"color: #6B737C\">// initial number of price records (candles) the chart will display</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    initialCnt</span><span style=\"color: #F97583\">:</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F8F8F8\">40</span><span style=\"color: #BBBBBB\">,</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    </span><span style=\"color: #6B737C\">// maximum number of empty future price records (candles) the chart will display after the last candle</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    limitFuture</span><span style=\"color: #F97583\">:</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F8F8F8\">200</span><span style=\"color: #BBBBBB\">,</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    </span><span style=\"color: #6B737C\">// maximum number of empty past price records (candles) the chart will display before the last candle</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    limitPast</span><span style=\"color: #F97583\">:</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F8F8F8\">200</span><span style=\"color: #BBBBBB\">,</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    </span><span style=\"color: #6B737C\">// minimum number of price records (candles) the chart will display (minimum zoom)</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    minCandles</span><span style=\"color: #F97583\">:</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F8F8F8\">20</span><span style=\"color: #BBBBBB\">,</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    </span><span style=\"color: #6B737C\">// padding top and bottom of price history (candles) and chart border so they don't touch</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    yAxisBounds</span><span style=\"color: #F97583\">:</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F8F8F8\">0.3</span><span style=\"color: #BBBBBB\">,</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    </span><span style=\"color: #6B737C\">// center the chart on the startTS, ranter than place startTS on the left</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">    center</span><span style=\"color: #F97583\">:</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">true</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">  }</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">}</span></span></code></pre>\n<h3 id=\"startts---center---initialcnt\">startTS - center - initialCnt</h3>\n<p>On first starting <code>chart.start()</code>, the chart will present the range, <code>initialCnt</code> the number of viewable price records (candles), starting from the start timestamp <code>startTS</code>. If none is specified, the chart will present the last, most recent price history. <code>center</code> will place the <code>startTS</code> in the center of the chart.</p>\n<aside aria-label=\"Note\" class=\"starlight-aside starlight-aside--note\"><p class=\"starlight-aside__title\" aria-hidden=\"true\"><svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"starlight-aside__icon\"><path d=\"M12 11C11.7348 11 11.4804 11.1054 11.2929 11.2929C11.1054 11.4804 11 11.7348 11 12V16C11 16.2652 11.1054 16.5196 11.2929 16.7071C11.4804 16.8946 11.7348 17 12 17C12.2652 17 12.5196 16.8946 12.7071 16.7071C12.8946 16.5196 13 16.2652 13 16V12C13 11.7348 12.8946 11.4804 12.7071 11.2929C12.5196 11.1054 12.2652 11 12 11ZM12.38 7.08C12.1365 6.97998 11.8635 6.97998 11.62 7.08C11.4973 7.12759 11.3851 7.19896 11.29 7.29C11.2017 7.3872 11.1306 7.49882 11.08 7.62C11.024 7.73868 10.9966 7.86882 11 8C10.9992 8.13161 11.0245 8.26207 11.0742 8.38391C11.124 8.50574 11.1973 8.61656 11.29 8.71C11.3872 8.79833 11.4988 8.86936 11.62 8.92C11.7715 8.98224 11.936 9.00632 12.099 8.99011C12.2619 8.97391 12.4184 8.91792 12.5547 8.82707C12.691 8.73622 12.8029 8.61328 12.8805 8.46907C12.9582 8.32486 12.9992 8.16378 13 8C12.9963 7.73523 12.8927 7.48163 12.71 7.29C12.6149 7.19896 12.5028 7.12759 12.38 7.08ZM12 2C10.0222 2 8.08879 2.58649 6.4443 3.6853C4.79981 4.78412 3.51809 6.3459 2.76121 8.17317C2.00433 10.0004 1.8063 12.0111 2.19215 13.9509C2.578 15.8907 3.53041 17.6725 4.92894 19.0711C6.32746 20.4696 8.10929 21.422 10.0491 21.8079C11.9889 22.1937 13.9996 21.9957 15.8268 21.2388C17.6541 20.4819 19.2159 19.2002 20.3147 17.5557C21.4135 15.9112 22 13.9778 22 12C22 10.6868 21.7413 9.38642 21.2388 8.17317C20.7363 6.95991 19.9997 5.85752 19.0711 4.92893C18.1425 4.00035 17.0401 3.26375 15.8268 2.7612C14.6136 2.25866 13.3132 2 12 2ZM12 20C10.4178 20 8.87104 19.5308 7.55544 18.6518C6.23985 17.7727 5.21447 16.5233 4.60897 15.0615C4.00347 13.5997 3.84504 11.9911 4.15372 10.4393C4.4624 8.88743 5.22433 7.46197 6.34315 6.34315C7.46197 5.22433 8.88743 4.4624 10.4393 4.15372C11.9911 3.84504 13.5997 4.00346 15.0615 4.60896C16.5233 5.21447 17.7727 6.23984 18.6518 7.55544C19.5308 8.87103 20 10.4177 20 12C20 14.1217 19.1572 16.1566 17.6569 17.6569C16.1566 19.1571 14.1217 20 12 20Z\"></path></svg>Note</p><section class=\"starlight-aside__content\"><p>All timestamps must be in milliseconds!</p></section></aside>\n<h3 id=\"mincandles\">minCandles</h3>\n<p><code>minCandles</code> is the minimum number of price records (candles) that the chart will display. This is also the minimum zoom level. If not specified, the chart will use a default.</p>\n<h3 id=\"limitfuture---limitpast\">limitFuture - limitPast</h3>\n<p>These limits are the “padding” / “empty” candles at the end or start of the price data history. Say you have 1000 price records (candles) <code>limitFuture</code> and <code>limitPast</code> will then allow the chart to scroll, say for example, another 50 to the past, or future, depending upon what you define. If you add more data (merge) to the chart it doesn’t matter, the padding is always present on either end no matter the dataset size. The chart will use defaults if neither are specified.</p>\n<h3 id=\"yaxisbounds\">yAxisBounds</h3>\n<p><code>yAxisBounds</code> determines the amount of padding between the chart border and the highest and lowest price records (candles). If ot specified a default will be used. This value is only used in automatic display mode, where the chart can only be scrolled / panned left or right In manual mode when the chart can be panned up, down, left or right, this value is ignored, until the display mode is reset to automatic again.</p>\n<h2 id=\"set-range\">Set Range</h2>\n<p><code>setRange(start, end)</code> expects price history data index values for <code>start</code> and <code>end</code>.</p>\n<p>It is more likely that you will want to reference your price data via timestamps. In that case <a href=\"#jump-to-timestamp\">Jump to Timestamp</a> <code>jumpToTS(ts)</code> is preferable.</p>\n<pre is:raw=\"\" class=\"astro-code min-dark\" style=\"background-color: #1f1f1f; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #79B8FF\">chart</span><span style=\"color: #B392F0\">.setRange(start</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> end)</span></span></code></pre>\n<h2 id=\"jump-to-index\">Jump to Index</h2>\n<p>Position the chart display range on the specified data history index.</p>\n<p><code>limited</code> will limit the range start to in bounds values of the data history.\n<code>center</code> will center the display range on the start value.</p>\n<pre is:raw=\"\" class=\"astro-code min-dark\" style=\"background-color: #1f1f1f; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #79B8FF\">chart</span><span style=\"color: #B392F0\">.jumpToIndex(start</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> limited</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> center</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">)</span></span></code></pre>\n<h2 id=\"jump-to-timestamp\">Jump to Timestamp</h2>\n<p>Position the chart display range on the specified timestamp.</p>\n<p><code>limited</code> will limit the range start to in bounds values of the data history.\n<code>center</code> will center the display range on the start value.</p>\n<pre is:raw=\"\" class=\"astro-code min-dark\" style=\"background-color: #1f1f1f; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #79B8FF\">chart</span><span style=\"color: #B392F0\">.jumpToTS(ts</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> limited</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> center</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">)</span></span></code></pre>\n<h2 id=\"jump-to-start\">Jump to Start</h2>\n<p>Position the chart display range on the earliest (first) data history value.</p>\n<p><code>center</code> will center the display range on the start value.</p>\n<pre is:raw=\"\" class=\"astro-code min-dark\" style=\"background-color: #1f1f1f; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #79B8FF\">chart</span><span style=\"color: #B392F0\">.jumpToStart(center</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">false</span><span style=\"color: #B392F0\">) </span></span></code></pre>\n<h2 id=\"jump-to-end\">Jump to End</h2>\n<p>Position the chart display range on the most recent (last) data history value.</p>\n<p><code>center</code> will center the display range on the start value.</p>\n<pre is:raw=\"\" class=\"astro-code min-dark\" style=\"background-color: #1f1f1f; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #79B8FF\">chart</span><span style=\"color: #B392F0\">.jumpToEnd(center</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">true</span><span style=\"color: #B392F0\">)</span></span></code></pre>\n<h2 id=\"merge-data\">Merge Data</h2>\n<p>Merge any of the following data into the chart data:</p>\n<ul>\n<li>Price history (candles)</li>\n<li>Indicator data</li>\n</ul>\n<pre is:raw=\"\" class=\"astro-code min-dark\" style=\"background-color: #1f1f1f; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #79B8FF\">chart</span><span style=\"color: #B392F0\">.mergeData(merge</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> newRange</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">false</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> calc</span><span style=\"color: #F97583\">=</span><span style=\"color: #79B8FF\">false</span><span style=\"color: #B392F0\">)</span></span></code></pre>\n<p>Refer to <a href=\"../state/#merging-data-into-the-state\">Merging Data Into the State</a> for further information.</p>\n<h1 id=\"range-instance\">Range Instance</h1>\n<p>The range instance can be referenced from the root API.</p>\n<pre is:raw=\"\" class=\"astro-code min-dark\" style=\"background-color: #1f1f1f; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #79B8FF\">chart</span><span style=\"color: #B392F0\">.range</span></span></code></pre>\n<p>It provides several helper methods and status for handling the range, indexes and timestamps.</p>\n<h2 id=\"value\">Value</h2>\n<p>Return the value (array) at price history index. If price history index, out of bounds will return null filled entry (array).</p>\n<p>If the <code>id</code> is specified, then it will return the matching indicator data.</p>\n<pre is:raw=\"\" class=\"astro-code min-dark\" style=\"background-color: #1f1f1f; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #79B8FF\">chart</span><span style=\"color: #B392F0\">.</span><span style=\"color: #79B8FF\">range</span><span style=\"color: #B392F0\">.value (index</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> id)</span></span></code></pre>\n<h2 id=\"valuebyts\">ValueByTS</h2>\n<h2 id=\"get-data-by-id\">Get Data By ID</h2>\n<h2 id=\"get-time-index\">Get Time Index</h2>\n<h2 id=\"in-range\">In Range</h2>\n<h2 id=\"in-price-history\">In Price History</h2>\n<h2 id=\"in-render-range\">In Render Range</h2>\n<h2 id=\"range-index\">Range Index</h2>\n<h2 id=\"snapshot\">Snapshot</h2>\n<h1 id=\"range-exports\">Range Exports</h1>\n<p>TradeX Chart also exports it’s internal Range module.</p>\n<pre is:raw=\"\" class=\"astro-code min-dark\" style=\"background-color: #1f1f1f; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> { range } </span><span style=\"color: #F97583\">from</span><span style=\"color: #B392F0\"> </span><span style=\"color: #FFAB70\">\"tradex-chart\"</span></span></code></pre>\n<p>Included is a helper function you might find useful.</p>\n<h2 id=\"detect-interval\">Detect Interval</h2>\n<p>Detects candles interval from an array of ohlcv values (price history). It requires an minimum of two entries, otherwise it cannot make any comparison. The returned interval value is in milliseconds.</p>\n<pre is:raw=\"\" class=\"astro-code min-dark\" style=\"background-color: #1f1f1f; overflow-x: auto; white-space: pre-wrap; word-wrap: break-word;\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #F97583\">import</span><span style=\"color: #B392F0\"> { detectInterval } </span><span style=\"color: #F97583\">from</span><span style=\"color: #B392F0\"> </span><span style=\"color: #FFAB70\">\"tradex-chart\"</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #F97583\">const</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">history</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> [</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">  [timestamp</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> open</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> high</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> low</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> close</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> volume]</span><span style=\"color: #BBBBBB\">,</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">  [timestamp</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> open</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> high</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> low</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> close</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> volume]</span><span style=\"color: #BBBBBB\">,</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">  [timestamp</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> open</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> high</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> low</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> close</span><span style=\"color: #BBBBBB\">,</span><span style=\"color: #B392F0\"> volume]</span><span style=\"color: #BBBBBB\">,</span></span>\n<span class=\"line\"><span style=\"color: #B392F0\">]</span></span>\n<span class=\"line\"><span style=\"color: #6B737C\">// returns the interval in millisecons</span></span>\n<span class=\"line\"><span style=\"color: #F97583\">const</span><span style=\"color: #B392F0\"> </span><span style=\"color: #79B8FF\">tfms</span><span style=\"color: #B392F0\"> </span><span style=\"color: #F97583\">=</span><span style=\"color: #B392F0\"> detectInterval(history)</span></span></code></pre>");

				const frontmatter = {"title":"Range","description":"Temporal subset of chart data displayed to the user"};
				const file = "/mnt/ext4/Home/neoarttec/Archives/Linux/Crypto/Trading/Mercury/MercuryTrader/component-module-tests/TradeX/tradex-chart/src/docs/src/content/docs/reference/range.md";
				const url = undefined;
				function rawContent() {
					return "\nThe chart range determines what subset of price data is displayed to the user via a start and end bound.\n\n## Initial Range Config\n\nOn ``chart.start(config)`` the chart will look for a starting timestamp in the provided config. If none is found, it will default to displaying the latest price records (candles).\n\n```javascript\nconst config = {\n  range: {\n    // range starting timestamp, chart will display data from here\n    // if undefined, the range will position by default at the end of the price history ie. the most recent price records (candles)\n    startTS: 1543572000000,\n    // initial number of price records (candles) the chart will display\n    initialCnt: 40,\n    // maximum number of empty future price records (candles) the chart will display after the last candle\n    limitFuture: 200,\n    // maximum number of empty past price records (candles) the chart will display before the last candle\n    limitPast: 200,\n    // minimum number of price records (candles) the chart will display (minimum zoom)\n    minCandles: 20,\n    // padding top and bottom of price history (candles) and chart border so they don't touch\n    yAxisBounds: 0.3,\n    // center the chart on the startTS, ranter than place startTS on the left\n    center: true\n  }\n}\n```\n### startTS - center - initialCnt\n\nOn first starting ``chart.start()``, the chart will present the range, ``initialCnt`` the number of viewable price records (candles), starting from the start timestamp ``startTS``. If none is specified, the chart will present the last, most recent price history. ``center`` will place the ``startTS`` in the center of the chart.\n\n:::note\nAll timestamps must be in milliseconds!\n:::\n\n### minCandles\n\n``minCandles`` is the minimum number of price records (candles) that the chart will display. This is also the minimum zoom level. If not specified, the chart will use a default.\n\n### limitFuture - limitPast\n\nThese limits are the \"padding\" / \"empty\" candles at the end or start of the price data history. Say you have 1000 price records (candles) ``limitFuture`` and ``limitPast`` will then allow the chart to scroll, say for example, another 50 to the past, or future, depending upon what you define. If you add more data (merge) to the chart it doesn't matter, the padding is always present on either end no matter the dataset size. The chart will use defaults if neither are specified.\n\n### yAxisBounds\n\n``yAxisBounds`` determines the amount of padding between the chart border and the highest and lowest price records (candles). If ot specified a default will be used. This value is only used in automatic display mode, where the chart can only be scrolled / panned left or right In manual mode when the chart can be panned up, down, left or right, this value is ignored, until the display mode is reset to automatic again.\n\n## Set Range\n\n``setRange(start, end)`` expects price history data index values for ``start`` and ``end``. \n\nIt is more likely that you will want to reference your price data via timestamps. In that case [Jump to Timestamp](#jump-to-timestamp) ``jumpToTS(ts)`` is preferable.\n\n```javascript\nchart.setRange(start, end)\n```\n\n## Jump to Index\n\nPosition the chart display range on the specified data history index.\n\n``limited`` will limit the range start to in bounds values of the data history.\n``center`` will center the display range on the start value.\n\n```javascript\nchart.jumpToIndex(start, limited=true, center=true)\n```\n\n## Jump to Timestamp\n\nPosition the chart display range on the specified timestamp.\n\n``limited`` will limit the range start to in bounds values of the data history.\n``center`` will center the display range on the start value.\n\n```javascript\nchart.jumpToTS(ts, limited=true, center=true)\n```\n\n## Jump to Start\n\nPosition the chart display range on the earliest (first) data history value.\n\n``center`` will center the display range on the start value.\n\n```javascript\nchart.jumpToStart(center=false) \n```\n\n## Jump to End\n\nPosition the chart display range on the most recent (last) data history value.\n\n``center`` will center the display range on the start value.\n\n```javascript\nchart.jumpToEnd(center=true)\n```\n\n## Merge Data\n\nMerge any of the following data into the chart data:\n\n* Price history (candles)\n* Indicator data\n\n```javascript\nchart.mergeData(merge, newRange=false, calc=false)\n```\nRefer to [Merging Data Into the State](../state/#merging-data-into-the-state) for further information.\n\n# Range Instance\n\nThe range instance can be referenced from the root API.\n\n```javascript\nchart.range\n```\n\nIt provides several helper methods and status for handling the range, indexes and timestamps.\n\n## Value\n\nReturn the value (array) at price history index. If price history index, out of bounds will return null filled entry (array).\n\nIf the ``id`` is specified, then it will return the matching indicator data.\n\n```javascript\nchart.range.value (index, id)\n```\n\n## ValueByTS\n\n## Get Data By ID\n\n## Get Time Index\n\n## In Range\n\n## In Price History\n\n## In Render Range\n\n## Range Index\n\n## Snapshot\n\n# Range Exports\n\nTradeX Chart also exports it's internal Range module. \n\n```javascript\nimport { range } from \"tradex-chart\"\n```\n\nIncluded is a helper function you might find useful.\n\n## Detect Interval\n\nDetects candles interval from an array of ohlcv values (price history). It requires an minimum of two entries, otherwise it cannot make any comparison. The returned interval value is in milliseconds.\n\n```javascript\nimport { detectInterval } from \"tradex-chart\"\n\nconst history = [\n  [timestamp, open, high, low, close, volume],\n  [timestamp, open, high, low, close, volume],\n  [timestamp, open, high, low, close, volume],\n]\n// returns the interval in millisecons\nconst tfms = detectInterval(history)\n```\n\n";
				}
				function compiledContent() {
					return html;
				}
				function getHeadings() {
					return [{"depth":2,"slug":"initial-range-config","text":"Initial Range Config"},{"depth":3,"slug":"startts---center---initialcnt","text":"startTS - center - initialCnt"},{"depth":3,"slug":"mincandles","text":"minCandles"},{"depth":3,"slug":"limitfuture---limitpast","text":"limitFuture - limitPast"},{"depth":3,"slug":"yaxisbounds","text":"yAxisBounds"},{"depth":2,"slug":"set-range","text":"Set Range"},{"depth":2,"slug":"jump-to-index","text":"Jump to Index"},{"depth":2,"slug":"jump-to-timestamp","text":"Jump to Timestamp"},{"depth":2,"slug":"jump-to-start","text":"Jump to Start"},{"depth":2,"slug":"jump-to-end","text":"Jump to End"},{"depth":2,"slug":"merge-data","text":"Merge Data"},{"depth":1,"slug":"range-instance","text":"Range Instance"},{"depth":2,"slug":"value","text":"Value"},{"depth":2,"slug":"valuebyts","text":"ValueByTS"},{"depth":2,"slug":"get-data-by-id","text":"Get Data By ID"},{"depth":2,"slug":"get-time-index","text":"Get Time Index"},{"depth":2,"slug":"in-range","text":"In Range"},{"depth":2,"slug":"in-price-history","text":"In Price History"},{"depth":2,"slug":"in-render-range","text":"In Render Range"},{"depth":2,"slug":"range-index","text":"Range Index"},{"depth":2,"slug":"snapshot","text":"Snapshot"},{"depth":1,"slug":"range-exports","text":"Range Exports"},{"depth":2,"slug":"detect-interval","text":"Detect Interval"}];
				}
				async function Content() {
					const { layout, ...content } = frontmatter;
					content.file = file;
					content.url = url;
					const contentFragment = createVNode(Fragment, { 'set:html': html });
					return contentFragment;
				}
				Content[Symbol.for('astro.needsHeadRendering')] = true;

export { Content, compiledContent, Content as default, file, frontmatter, getHeadings, images, rawContent, url };
